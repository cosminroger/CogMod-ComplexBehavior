;;; Model Memoar
;;;

(add-dm
   (goal isa memoar state startGame)
)

(set-all-baselevels -100 10) ;; time offset and number of references

(p decide-action
    =goal>
        state startGame
==>
    =goal>
        state wait
    +action>
        isa ready
)

(p rememberCard
    =goal>
        state wait
    =visual>
        isa memorize
==>
    =goal>
        state memorizing
    -visual>
)

(p cardRemembered
    =goal>
        state memorizing
==>
    =goal>
        state wait
    +action>
        isa cardMemorized
)

(p checkCard
    =goal>
        state wait
    =visual>
        isa myTurn
        cardNo =cardNo
==>
    =goal>
        isa remembering
    +retrieval>
        cardNo =cardNo
)

(p retrFail
    =goal>
        state remembering
    ?retrieval>
        state error
==>
    =goal>
        state wait
    +action>
        isa retrievalError
)

(p retrSuccess
    =goal>
        state remembering
    =retrieval>
        isa memorize
        animal =animal
        background =background
==>
    =goal>
        state match
    =imaginal>
        an =animal
        bg =background
)

(p matchAnimalFirst
    =goal>
        state match
    =imaginal>
      - an nil
      - bg nil
    =visual>
      lastAnimal =an
      - lastBackground =bg
==>
    =goal>
        state wait
    +action>
        isa animalMatch
    -retrieval>
)

(p matchAnimalFirst
    =goal>
        state match
    =imaginal>
      - an nil
      - bg nil
    =visual>
      - lastAnimal =an
      lastBackground =bg
==>
    =goal>
        state wait
    +action>
        isa backgroundMatch
    -retrieval>
)


(p noMatch
    =goal>
        state match
    =imaginal>
      - an nil
      - bg nil
    =visual>
      - lastAnimal =an
      - lastBackground =bg
==>
    =goal>
        state wait
    +action>
        isa noMatch
)

;;; IT ENDS HERE

(goal-focus goal)

